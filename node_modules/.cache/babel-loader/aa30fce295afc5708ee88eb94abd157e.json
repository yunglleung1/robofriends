{"ast":null,"code":"import _classCallCheck from \"/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from './ErrorBoundary';\nimport { setSearchField } from '../actions';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    // searchField: state.searchRobots.searchField for multiple reducers\n    // searchField: state.searchField//for one reducer\n    searchField: state.searchRobots.searchField,\n    //update for multiple reducer\n    robots: state.requestRobots.robots,\n    //added for 2nd reducer\n    isPending: state.requestRobots.isPending,\n    //also from  2nd reducer\n    error: state.requestRobots.error //also from  2nd reducer\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    }\n  };\n};\n\nvar connector = connect(mapStateToProps, mapDispatchToProps); //connect returns a higher order function\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); //brings in Component\n\n    /*\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n    */\n\n    _this.state = {\n      robots: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (robots) {\n        _this2.setState({\n          robots: robots\n        });\n      });\n    }\n    /*\n      onSearchChange = (event) => {\n        this.setState({\n          searchfield: event.target.value\n        })\n      }\n    \n    render(){\n      const {robots, searchfield} = this.state;//destructuring\n      const filteredBots = robots.filter((bot) => {\n        return bot.name.toLowerCase().includes(searchfield.toLowerCase());\n      });\n    \n      if(robots.length){\n        return (\n          <div className = 'App'>\n            <h1>RoboFriends</h1>\n            <SearchBox onSearchChange = {this.onSearchChange}/>\n            <Scroll>\n              <ErrorBoundary>\n                <CardList bots = {filteredBots}/>\n              </ErrorBoundary>\n            </Scroll>\n          </div>\n        );\n      } else{\n        return 'LOADING...PLEASE WAIT'\n      }\n    }\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var robots = this.state.robots; //destructuring\n\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange; //added from redux\n\n      var filteredBots = robots.filter(function (bot) {\n        return bot.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n\n      if (robots.length) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"RoboFriends\"), React.createElement(SearchBox, {\n          onSearchChange: onSearchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(Scroll, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(ErrorBoundary, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(CardList, {\n          bots: filteredBots,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }))));\n      } else {\n        return 'LOADING...PLEASE WAIT';\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connector(App); // export default conect()(App);//alt syntax","map":{"version":3,"sources":["/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","connect","mapStateToProps","state","searchField","searchRobots","robots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","connector","App","fetch","then","response","json","setState","props","filteredBots","filter","bot","name","toLowerCase","includes","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACL;AACA;AACAC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAH3B;AAGuC;AAC5CE,IAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD,MAJvB;AAI8B;AACnCE,IAAAA,SAAS,EAAEL,KAAK,CAACI,aAAN,CAAoBC,SAL1B;AAKoC;AACzCC,IAAAA,KAAK,EAAEN,KAAK,CAACI,aAAN,CAAoBE,KANtB,CAM4B;;AAN5B,GAAP;AAQD,CATD;;AAWA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACX,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;AAAA;AADX,GAAP;AAGD,CAJD;;AAMA,IAAMC,SAAS,GAAGf,OAAO,CAACC,eAAD,EAAkBQ,kBAAlB,CAAzB,C,CAA+D;;IAEzDO,G;;;;;AACJ,iBAAa;AAAA;;AAAA;;AACX,8EADW,CACH;;AACR;;;;;;;AAMA,UAAKd,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE;AADG,KAAb;AARW;AAWZ;;;;wCAEkB;AAAA;;AACjBY,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHD,EAICF,IAJD,CAIM,UAACb,MAAD,EAAY;AAChB,QAAA,MAAI,CAACgB,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAAEA;AADI,SAAd;AAGD,OARD;AASD;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA+BU;AAAA,UACCA,MADD,GACW,KAAKH,KADhB,CACCG,MADD,EACsB;;AADtB,wBAEgC,KAAKiB,KAFrC;AAAA,UAECnB,WAFD,eAECA,WAFD;AAAA,UAEcQ,cAFd,eAEcA,cAFd,EAE2C;;AACjD,UAAMY,YAAY,GAAGlB,MAAM,CAACmB,MAAP,CAAc,UAACC,GAAD,EAAS;AAC1C,eAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCzB,WAAW,CAACwB,WAAZ,EAAhC,CAAP;AACD,OAFoB,CAArB;;AAIA,UAAGtB,MAAM,CAACwB,MAAV,EAAiB;AACf,eACE;AAAK,UAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,SAAD;AAAW,UAAA,cAAc,EAAIlB,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAIY,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAHF,CADF;AAWD,OAZD,MAYM;AACJ,eAAO,uBAAP;AACD;AACF;;;;EA/Ee7B,S;;AAmFlB,eAAeqB,SAAS,CAACC,GAAD,CAAxB,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from './ErrorBoundary';\n\nimport {setSearchField} from '../actions';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    // searchField: state.searchRobots.searchField for multiple reducers\n    // searchField: state.searchField//for one reducer\n    searchField: state.searchRobots.searchField,//update for multiple reducer\n    robots: state.requestRobots.robots,//added for 2nd reducer\n    isPending: state.requestRobots.isPending,//also from  2nd reducer\n    error: state.requestRobots.error,//also from  2nd reducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n  }\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);//connect returns a higher order function\n\nclass App extends Component {\n  constructor(){\n    super();//brings in Component\n    /*\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n    */\n    this.state = {\n      robots: []\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json();\n    })\n    .then((robots) => {\n      this.setState({\n        robots: robots\n      })\n    })\n  }\n\n/*\n  onSearchChange = (event) => {\n    this.setState({\n      searchfield: event.target.value\n    })\n  }\n\nrender(){\n  const {robots, searchfield} = this.state;//destructuring\n  const filteredBots = robots.filter((bot) => {\n    return bot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  if(robots.length){\n    return (\n      <div className = 'App'>\n        <h1>RoboFriends</h1>\n        <SearchBox onSearchChange = {this.onSearchChange}/>\n        <Scroll>\n          <ErrorBoundary>\n            <CardList bots = {filteredBots}/>\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  } else{\n    return 'LOADING...PLEASE WAIT'\n  }\n}\n*/\n\n  render(){\n    const {robots} = this.state;//destructuring\n    const {searchField, onSearchChange} = this.props;//added from redux\n    const filteredBots = robots.filter((bot) => {\n      return bot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if(robots.length){\n      return (\n        <div className = 'App'>\n          <h1>RoboFriends</h1>\n          <SearchBox onSearchChange = {onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList bots = {filteredBots}/>\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    } else{\n      return 'LOADING...PLEASE WAIT'\n    }\n  }\n\n}\n\nexport default connector(App);\n// export default conect()(App);//alt syntax\n"]},"metadata":{},"sourceType":"module"}