{"ast":null,"code":"import { CHANGE_SEARCH_FIELD } from './constants'; //note: this is an alternative to containers that use constructors with this.state = {...}\n\nvar initialState = {\n  searchField: '' //note: reducer searchRobots is a pure function\n\n};\nexport var searchRobots = function searchRobots() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  //switch statements are preferred for simplicity in expanding Apps\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n    // return {...state, searchField: action.payload};//spread operator alt\n    //returns an state object {} with everything in state & searchField\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/thedoctor/Desktop/Desktop Folders Files/Junior to Senior Web Dev/Projects & Exercises/3 Redux/robofriends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","initialState","searchField","searchRobots","state","action","type","Object","assign","payload"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,aAAlC,C,CAEA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM,CAIrB;;AAJqB,CAArB;AAKA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BH,YAA8B;AAAA,MAAhBI,MAAgB,uEAAP,EAAO;;AAC/D;AACA,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,mBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAArB,OAAzB,CAAP;AACA;AACA;;AACF;AACE,aAAOL,KAAP;AANJ;AAQH,CAVM","sourcesContent":["import {CHANGE_SEARCH_FIELD} from './constants';\n\n//note: this is an alternative to containers that use constructors with this.state = {...}\nconst initialState = {\n  searchField: ''\n}\n\n//note: reducer searchRobots is a pure function\nexport const searchRobots = (state = initialState, action = {}) => {\n    //switch statements are preferred for simplicity in expanding Apps\n    switch(action.type){\n      case CHANGE_SEARCH_FIELD:\n        return Object.assign({}, state, {searchField: action.payload});\n        // return {...state, searchField: action.payload};//spread operator alt\n        //returns an state object {} with everything in state & searchField\n      default:\n        return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}