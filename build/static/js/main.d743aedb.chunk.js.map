{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/ErrorBoundary.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","props","_props$bot","bot","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","bots","map","robotObj","components_Card","key","SearchBox","aria-label","type","placeholder","onChange","onSearchChange","Scroll","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","setState","Component","Header","PureComponent","connector","connect","searchField","searchRobots","robots","requestRobots","isPending","dispatch","event","payload","target","value","onRequestRobots","fetch","response","json","_this$props","filteredBots","filter","toLowerCase","includes","components_Header","src_components_SearchBox","src_components_Scroll","containers_ErrorBoundary","components_CardList","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d743aedb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './card.css'\n\nconst Card = (props) => {\n  const {id, name, email} = props.bot;\n  return(\n    <div className = \"card\">\n      <img src = {`https://robohash.org/${id}?size=200x200`} alt = 'Robot Pic'/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = (props) => {\n  return(\n    <div className='grid'>\n      {\n        props.bots.map((robotObj) => {\n          return <Card\n            key = {robotObj.id}\n            bot = {robotObj}\n            />\n        })\n      }\n    </div>\n\n  )\n}\n\nexport default CardList;\n","import React from 'react';\nimport './SearchBox.css';\n\nconst SearchBox = (props) => {\n  return <input\n  aria-label = 'Search Robots'\n  type = 'search'\n  placeholder = 'search robots'\n  onChange = {props.onSearchChange}\n  />;\n}\n\nexport default SearchBox;\n","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n  return (\n    <div className = 'scroll'>\n      {props.children}\n    </div>\n  )\n\n}\n\nexport default Scroll;\n","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info){\n    this.setState({\n      hasError: true\n    })\n  }\n\n  render(){\n    if(this.state.hasError){\n      return(<h1>Oops...Something went wrong</h1>)\n    }\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;\n","import React, {PureComponent} from 'react';\n\nclass Header extends PureComponent {\n  render(){\n    console.log('Header');\n    return <h1>RoboFriends</h1>;\n  }\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from './ErrorBoundary';\nimport Header from '../components/Header';\n\nimport {setSearchField, requestRobots} from '../actions';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => requestRobots(dispatch)\n  }\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.onRequestRobots();\n  }\n\n  render(){\n    const {searchField, onSearchChange, robots, isPending} = this.props;//added from redux\n    const filteredBots = robots.filter((bot) => {\n      return bot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n      return (\n        <div className = 'App'>\n          <Header/>\n          <SearchBox onSearchChange = {onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              {\n                isPending ? <h1>'LOADING...PLEASE WAIT'</h1> :\n                <ErrorBoundary>\n                  <CardList bots = {filteredBots}/>\n                </ErrorBoundary>\n              }\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n  }\n\n}\n\nexport default connector(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants';\n\nexport const setSearchField = (text) => {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  }\n};\n\nexport const requestRobots = (dispatch) => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING\n  });\n\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json();\n    })\n    .then((robots) => {\n      dispatch({\n        type: REQUEST_ROBOTS_SUCCESS,\n        payload: robots\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: REQUEST_ROBOTS_FAILED,\n        payload: error\n      })\n    });\n\n}\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants';\n\n//note: this is an alternative to containers that use constructors with this.state = {...}\nconst initialStateSearch = {\n  searchField: ''\n}\n\n//note: reducer searchRobots is a pure function\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n    switch(action.type){\n      case CHANGE_SEARCH_FIELD:\n        return Object.assign({}, state, {searchField: action.payload});\n      default:\n        return state;\n    }\n}\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch(action.type){\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true});\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign(\n        {},\n        state,\n        {\n          robots: action.payload,\n          isPending: false\n        }\n      );\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign(\n        {},\n        state,\n        {\n          error: action.payload,\n          isPending: false\n        }\n      );\n\n      default:\n        return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App'\nimport {Provider} from 'react-redux';\nimport {searchRobots, requestRobots} from './reducers'\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({\n  searchRobots: searchRobots,\n  requestRobots: requestRobots\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));//for multiple reducers\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}